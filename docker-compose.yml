name: thoughts-stack
volumes:
  files-shared:
services:
  db:
    image: postgres:17.2
    env_file: .env
    ports:
      - 5432:5432
  
  ui:
    build:
      context: ./../ui
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "3009:3009"
  
  ltm:
    # image: "thoughts_ltm_service:latest"
    build:
      context: ./../long_term_memory
      dockerfile: Dockerfile
    env_file: .env
    environment: 
      - KAFKA_SOCKET=kafka-broker:9093
      - KAFKA_CLIENT_ID=ltm_consumer
    ports:
      - "3008:3000"
    # volumes:
    #   - ./../volumes:/ltm
    volumes:
      - files-shared:/ltm:rw
    depends_on:
      - db
  
  ltm-consumer:
    build:
      context: ./../long_term_memory
      dockerfile: Dockerfile
    env_file: .env
    command: bundle exec karafka server
    volumes:
      - ./../volumes:/ltm-consumer
    depends_on:
      - "kafka-broker"
      - db
    environment: 
      - KAFKA_SOCKET=kafka-broker:9093
      - KAFKA_CLIENT_ID=ltm_consumer

  zookeeper:
    image: 'bitnami/zookeeper:3.8.4'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-broker:
    image: 'bitnami/kafka:3.9.0'
    user: root
    ports:
      - 9092:9092
      - 9093:9092
    environment:
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka-broker:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_BROKER_ID=1
    volumes:
      - ./../volumes:/Kafka:/bitnami/kafka-broker
    depends_on:
      - zookeeper

  ocr:
    build:
      context: ./../ocr
      dockerfile: Dockerfile
    env_file: .env
    command: bundle exec karafka server
    # volumes:
    #   - ./../volumes:/ocr
    volumes:
      - files-shared:/ltm:rw
    depends_on:
      - "kafka-broker"
    environment: 
      - KAFKA_CLIENT_ID=ocr_service

  web_sockets_server:
    build:
      context: ./../ws_server
      dockerfile: Dockerfile
    ports:
      - 4000:4000
    env_file: .env
    depends_on:
      - "kafka-broker"

  text_analyzer:
    build:
      context: ./../text_analyzer
      dockerfile: Dockerfile
    env_file: .env
    command: /text_analyzer
    restart: always
    depends_on:
      - "kafka-broker"
    # environment: 
    #   - KAFKA_CLIENT_ID=text_analyzer

  mongo:
    image: mongo
    # restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    # restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  neo4j:
    image: neo4j:5.26.0 
    volumes:
        - /$HOME/neo4j/logs:/logs
        - /$HOME/neo4j/config:/config
        - /$HOME/neo4j/data:/data
        - /$HOME/neo4j/plugins:/plugins
    environment:
        - NEO4J_AUTH=neo4j/your_password
    ports:
      - "7474:7474"
      - "7687:7687"
    # restart: always
